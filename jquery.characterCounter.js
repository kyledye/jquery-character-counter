// Generated by CoffeeScript 1.10.0
(function($, window, document) {
  var Plugin, defaults, pluginName;
  pluginName = "characterCounter";
  defaults = {
    maxLength: 255,
    target: "",
    template: "<strong>{{cnt}}</strong> of {{len}} characters allowed"
  };
  Plugin = (function() {
    function Plugin(element, options) {
      this.element = element;
      this.settings = $.extend({}, defaults, options);
      this._defaults = defaults;
      this._name = pluginName;
      this.init();
    }

    Plugin.prototype.init = function() {
      this.getMaxLength();
      this.setCount();
      this.bindEvents(this);
    };

    Plugin.prototype.bindEvents = function(me) {
      me.setCount();
      return $(this.settings.target).on('keyup', function() {
        return me.setCount();
      });
    };

    Plugin.prototype.setCount = function() {
      var len, max, str;
      len = this.getStringLength();
      max = this.settings.maxLength;
      str = this.settings.template.replace(/\{\{cnt\}\}/ig, len).replace(/\{\{len\}\}/ig, max);
      return $(this.element).empty().append(str);
    };

    Plugin.prototype.getStringLength = function() {
      var len;
      len = $(this.settings.target).val();
      return len.length;
    };

    Plugin.prototype.getMaxLength = function() {
      var len, tgt;
      tgt = $(this.element).data("count-target");
      this.settings.target = tgt;
      len = parseInt($(tgt).attr('maxlength'));
      if (len === void 0) {
        len = this.settings.maxLength;
      } else {
        this.settings.maxLength = len;
      }
      return len;
    };

    return Plugin;

  })();
  return $.fn[pluginName] = function(options) {
    return this.each(function() {
      if (!$.data(this, "plugin_" + pluginName)) {
        return $.data(this, "plugin_" + pluginName, new Plugin(this, options));
      }
    });
  };
})(jQuery, window, document);
